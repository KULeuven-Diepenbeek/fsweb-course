[
{
	"uri": "https://kuleuven-diepenbeek.github.io/fsweb-course/frontend/html/",
	"title": "HTML",
	"tags": [],
	"description": "",
	"content": "bron 1: Responsive Web Design with HTML5 and CSS - 4th edition - Ben Frain bron 2: W3Schools\nHyperText Markup language HTML staat voor \u0026lsquo;HyperText Markup Language\u0026rsquo; en is een manier om content te markeren zodat het door een technologie begrepen kan worden. HTML is essentieel voor menselijk begrijpbare webcontent. Je markeert tekstinhoud met tags/elements om structuur aan te brengen.\nElements, Tags en Attributes Een HTML element wordt gedefiniëerd een openingstag, elementinhoud en een sluitingstag. Een HTML tag wordt weergegeven met de naam van het element binnen in \u0026ldquo;\u0026lt; \u0026hellip; \u0026gt;\u0026rdquo; bv. \u0026lt;p\u0026gt;. Een sluitingstag bevat nog een \u0026ldquo;/\u0026rdquo; voor de element naam bv. \u0026lt;/p\u0026gt;. Elke openingstag moet meestal ook gevolgd worden door een sluitingstag van hetzelfde element bv. \u0026lt;p\u0026gt; ... \u0026lt;/p\u0026gt;. Een uitzondering op deze regel zijn een aantal self-closing elements die geen elementinhoud bevatten. Een self-closing element bevat dus maar één tag waarin de \u0026ldquo;/\u0026rdquo; na de elementnaam komt en voor de sluitende \u0026ldquo;\u0026gt;\u0026rdquo; bv. \u0026lt;img/\u0026gt;.\nEen element kan verschillende attributes bevatten die extra informatie over een HTML element bevatten. Deze attributen kunnen het gedrag of uiterlijk van een element wijzigen, de functionaliteit ervan definiëren of andere details specificeren, zoals de relatie met andere elementen of het gedrag als reactie op gebruikersinteracties. Attributen worden aan HTML-elementen toegevoegd met behulp van name-value pairs binnen de openingstag van het element. Enkele veelgebruikte HTML-attributen zijn. Een veelgebruikt attribuut is \u0026lsquo;id\u0026rsquo; dat je helpt een specifiek element terug te vinden met behulp van JavaScript bijvoorbeeld. Op volgende manier gebruik je attributen in HTML tags (Een element kan meerdere attributen bevatten):\n\u0026lt;p id=\u0026#34;paragraaf1\u0026#34; value=\u0026#34;1\u0026#34;\u0026gt;...\u0026lt;/p\u0026gt; Een element kan meerdere andere elementen bevatten. Hier spreken we dan van nested elements, bv.:\n\u0026lt;p id=\u0026#34;paragraaf1\u0026#34; value=\u0026#34;1\u0026#34;\u0026gt; \u0026lt;h1\u0026gt;...\u0026lt;/h1\u0026gt; \u0026lt;a\u0026gt;...\u0026lt;/a\u0026gt; \u0026lt;/p\u0026gt; Structuur van een HTML-document Je kan eender welke simpele tekst- of code-editor gebruiken om HTML bestanden aan te maken of te bewerken (bv. notepad, notepad++, vscode, sublime text, atom, vim, nano \u0026hellip;). Een HTML bestand zou volgende hoofdstuctuur moeten volgen:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; ... \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; ... \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Doctype: Hiermee geven we weer welk type dit document is. In ons geval dus steeds html. html element: Het HTML element met de naam \u0026lsquo;html\u0026rsquo;. Dit wordt de root tag van het HTML bestand genoemd, want alle html code moet binnen de \u0026lt;html\u0026gt; en \u0026lt;/html\u0026gt; tags staan lang attribuut: Met het language attribuut geven we meer informatie mee aan de webbrowser door te vermelden dat de content op deze webpagina in het Engels (en) geschreven is. (Nederlands = nl) head element: dit is een container voor de volgende metadata: \u0026lt;title\u0026gt;, \u0026lt;style\u0026gt;, \u0026lt;meta\u0026gt;, \u0026lt;link\u0026gt;, \u0026lt;script\u0026gt; and \u0026lt;base\u0026gt;. meta element: wordt gebruikt om de karakterset/encoding, paginabeschrijving, trefwoorden, auteur van het document en viewport settings te declareren. character encoding: dit verteld de webbrowser hoe de karakters gecodeerd zijn zodat hij ze correct kan decoderen. Tenzij je een goede reden hebt is de gebruikte codering normaal utf-8. body element: een element container die al de overige inhoud van het HTML bevat. De headers, paragrafen, de tekst \u0026hellip; Types van HTML elements Sectioning elements: elementen die worden gebruikt om de structuur van een webpagina te definiëren door secties van inhoud te scheiden. Bv. \u0026lt;header\u0026gt; en \u0026lt;footer\u0026gt;. Grouping elements: elementen die worden gebruikt om meerdere inhoudsitems te groeperen of te bundelen onder één overkoepelend element. Bv. \u0026lt;div\u0026gt; en \u0026lt;span\u0026gt;. Text-level semantics: dit verwijst naar de manier waarop HTML elements de betekenis en structuur van tekst op een webpagina definiëren. Deze elementen worden gebruikt om specifieke delen van de tekst te markeren en hun semantische betekenis aan te geven. Bv. \u0026lt;em\u0026gt; en \u0026lt;strong\u0026gt;. Een overzicht van de meest voorkomende HTML elementen en hun functies HTML vs HTML5 HTML5 is de nieuwere versie van HTML met een aantal nuttige voordelen. Zo is HTML5 zeer vrijgevend gezind in het weglaten van bepaalde attributen en gebruikt HTML5 default waarden voor attributen die nodig zijn maar niet specifiek uitgetyped werden. W Bijvoorbeeld:\n\u0026lt;link href=\u0026#34;CSS/main.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; /\u0026gt; HTML5:\n\u0026lt;link href=CSS/main.css rel=stylesheet \u0026gt; Merk op dat in het HTML5 voorbeeld geen \u0026ldquo;/\u0026rdquo; heeft voor het sluitende groter dan teken, geen quotes gebruikt voor de value van het attribuut \u0026lsquo;href\u0026rsquo; en \u0026lsquo;rel\u0026rsquo; en er geen attribuut \u0026rsquo;type\u0026rsquo; gedefinieerd is. HTML5 zal hier echter niet moeilijk over doen.\nIn het algemeen is het wel een goede strategie om je HTML bestand zo specifiek mogelijk te coderen om problemen in een later stadium te vermijden.\nAangezien HTML5 dus gewoon de nieuwere versie is van HTML gaan we dit gebruiken.\n"
},
{
	"uri": "https://kuleuven-diepenbeek.github.io/fsweb-course/introductie/",
	"title": "Introductie",
	"tags": [],
	"description": "",
	"content": "Info volgt nog. Check ook Toledo\n"
},
{
	"uri": "https://kuleuven-diepenbeek.github.io/fsweb-course/frontend/",
	"title": "Frontend",
	"tags": [],
	"description": "",
	"content": "Wat is de frontend? De frontend bestaat uit alle code waarmee de gebruiker rechstreeks mee interageert (bekijkt, input ingeeft, \u0026hellip;) in zijn/haar lokale webbrowser. Deze code wordt initieel opgehaald van de server en gecached in de webbrowser.\nDe frontend wordt ook wel de client-side genoemd.\nWaaruit bestaat de frontend? De frontend bestaat uit:\nHTML code voor de structuur van de inhoud CSS code voor het stijlen van de inhoud JavaScript code zorgt voor interactie met de gebruiker Static vs dynamic websites Een statische website bestaat uit webpaginas met vaste inhoud die hetzelfde is voor elke gebruiker.\nEen dynamische website genereert webcontent op basis van gebruiker interacties. Dit wordt gebeurt door server-side (of client-side) scripts. De inhoud van de webpagina verschilt dus voor elke gebruiker op basis van hun interactie met de website.\n"
},
{
	"uri": "https://kuleuven-diepenbeek.github.io/fsweb-course/",
	"title": "Index",
	"tags": [],
	"description": "",
	"content": "Full Stack Web Development Academiejaar 2023\u0026mdash;2024.\nPlanning nr datum onderwerp 01 do 15-02-2024 Introductie + HTML 02 vr 16-02-2024 HTML 03 wo 21-02-2024 Webbrowser tools + CSS 04 vr 23-02-2024 CSS 05 wo 28-02-2024 Javascript in HTML 06 do 29-02-2024 Putting it all together + Advanced CSS 07 do 07-03-2024 Responsive Design (part 1) 08 vr 08-03-2024 Responsive Design (part 2) 09 do 14-03-2024 Svelte Kit 10 vr 15-03-2024 Svelte Kit 11 do 21-03-2024 Svelte Kit 12 vr 22-03-2024 Svelte Kit 13 wo 27-03-2024 Svelte Kit 14 do 28-03-2024 Svelte Kit 15 wo 17-04-2024 Svelte Kit 16 vr 19-04-2024 Svelte Kit 17 ma 22-04-2024 Laravel 18 wo 24-04-2024 Laravel 19 ma 29-04-2024 Laravel 20 vr 03-05-2024 Laravel 21 ma 06-05-2024 Laravel 22 ma 13-05-2024 Laravel 23 vr 17-05-2024 Laravel 24 wo 22-05-2024 Laravel Cursus noties Er worden telkens blokken van 2 uur ingepland voor dit vak. Er zijn geen traditionele hoorcolleges voorzien. Alle noties zijn via deze website te raadplegen (tenzij anders vermeld).\nInhoudsopgave Introductie Frontend: HTML CSS Javascript Webbrowser tools Advanced CSS Responsive Design Syllabus Lesgevers: Coördinerend Verantwoordelijke: prof. dr. Kris Aerts (kris.aerts@kuleuven.be) assistent lesgever: ing. Arne Duyver (arne.duyver@kuleuven.be) Kantoor: Technologiecentrum Diepenbeek, Groep ACRO. Cursusbeschrijving Dit opleidingsonderdeel focust op de hele web workflow. De twee belangrijke delen zijn:\nfrontend backend Voor de backend leer je gebruik maken van de frameworks:\nSvelte Kit Laravel Vereiste voorkennis Basiskennis van programmeren. Doelstellingen Zie ook Studiegids UHasselt\nDe context en het overzicht worden aangereikt in de eerste lessen van dit vak.\nAls rode draad doorheen de oefeningen maak je een eigen portfolio site aan.\nAls practicum wordt een grotere probleemstelling als project uitgewerkt. Alle aan te leren aspecten van full stack web development komen in dit project aan bod. Studenten kunnen facultatief buiten het practicum extra thematische oefeningen oplossen.\nKalender Zie Mytimetable UHasselt.\n"
},
{
	"uri": "https://kuleuven-diepenbeek.github.io/fsweb-course/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]